/* ================================== */
/* ============ Button ============== */
/* ================================== */


.button {
	background-color: var(--bg-2);
	color: var(--fg-1);
	padding: 8px 16px;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	cursor: pointer;
	gap: 8px;
	font-size: medium;
	transition: 0.3s;
}

.button:hover {
	background-color: var(--bg-3);
}

.button.disabled, .button.disabled:hover{
	background-color: var(--bg-2);
	cursor: not-allowed;
}

.button.icon {
	padding: 8px;
	aspect-ratio: 1/1;
	width: 16px;
}

.button.loading.icon p {
	display: none;
}

.button.primary {
	background-color: var(--primary-color);
	color: var(--fg-1);
}

.button.primary:hover {
	background-color: var(--primary-color);
	filter: saturate(2);
}

.button.primary.disabled, .button.primary.disabled:hover{
	background-color: var(--primary-color-40);
	filter: saturate(1);
}

.button.ghost {
	background-color: transparent;
	color: var(--fg-1);
}

.button.ghost:hover {
	color: var(--fg-3);
}

.button.ghost.disabled, .button.ghost.disabled:hover{
	color: var(--fg-4);
	background: transparent;
}

.button.danger {
	background-color: var(--danger-color);
	color: var(--fg-1);
}

.button.danger:hover {
	background-color: var(--danger-color);
	filter: saturate(2);
}

.button.danger.disabled, .button.danger.disabled:hover{
	background-color: var(--danger-color-40);
	filter: saturate(1);
}

.button.success {
	background-color: var(--success-color);
	color: var(--fg-1);
}

.button.success:hover {
	background-color: var(--success-color);
	background-color: rgb(0, 194, 0);
}

.button.success.disabled, .button.success.disabled:hover{
	background-color: var(--success-color-40);
	filter: saturate(1);
}

.button.info {
	background-color: var(--info-color);
	color: var(--fg-1);
}

.button.info:hover {
	background-color: var(--info-color);
	filter: saturate(2);
}

.button.info.disabled, .button.info.disabled:hover{
	background-color: var(--info-color-40);
	filter: saturate(1);
}

/* ================================== */
/* ============= Card =============== */
/* ================================== */

.card {
	background-color: color-mix(in srgb, var(--bg-1), transparent 30%);
	backdrop-filter: blur(16px);
	color: var(--fg-1);
	padding: 16px;
	display: flex;
	flex-direction: column;
	position: relative;
	--border-radius: 4px;
	border-radius: var(--border-radius);
	box-sizing: border-box;
}

.card::after {
	content: "";
	position: absolute;
	background: var(--primary-color);
}

.card.left::after, .card.right::after {
	width: 2px;
	height: 100%;
	top: 0;
	box-shadow: 0px 0px 16px 4px var(--primary-color);
	background: linear-gradient(0deg, var(--primary-color-60) 0%, var(--primary-color) 10%, var(--primary-color) 90%, var(--primary-color-60) 100%);
}

.card.top::after, .card.bottom::after {
	width: 100%;
	height: 2px;
	left: 0;
	box-shadow: 0px 0px 16px 4px var(--primary-color);
	background: linear-gradient(90deg, var(--primary-color-60) 0%, var(--primary-color) 10%, var(--primary-color) 90%, var(--primary-color-60) 100%);
}

.card.left::after {
	left: 0;
}

.card.right::after {
	right: 0;
}

.card.top::after {
	top: 0;
}

.card.bottom::after {
	bottom: 0;
}

.card.info::after {
	--primary-color: var(--info-color);
	--primary-color-60: var(--info-color-60);
}

.card.danger::after {
	--primary-color: var(--danger-color);
	--primary-color-60: var(--danger-color-60);
}

.card.warning::after {
	--primary-color: var(--warning-color);
	--primary-color-60: var(--warning-color-60);
}

.card.success::after {
	--primary-color: var(--success-color);
	--primary-color-60: var(--success-color-60);
}

.card.team1::after {
	--primary-color: var(--team-1-color);
	--primary-color-60: var(--team-1-color-60);
}

.card.team2::after {
	--primary-color: var(--team-2-color);
	--primary-color-60: var(--team-2-color-60);
}

/* ================================== */
/* ============ Avatar ============== */
/* ================================== */

.avatar {
	aspect-ratio: 1/1;
	position: relative;
	border-radius: 8px;
	display: flex;
	justify-content: center;
	align-items: center;
}

.avatar.xs {
	width: 24px;
}

.avatar.xs img {
	border-radius: 4px;
}

.avatar.sm {
	width: 32px;
}

.avatar.sm img {
	border-radius: 6px;
}

.avatar.md {
	width: 48px;
}

.avatar.md img {
	border-radius: 8px;
}

.avatar.lg {
	width: 64px;
}

.avatar.lg img {
	border-radius: 12px;
}

.avatar img {
	border-radius: 8px;
	width: 100%;
	height: 100%;
	object-fit: cover;
	position: absolute;
}

.avatar p {
	position: absolute;
	color: var(--fg-1);
	font-weight: bold;
	text-transform: uppercase;
}

.avatar span {
	z-index: 2;
	position: absolute;
	aspect-ratio: 1/1;
	border-radius: 50%;
	width: 25%;
	bottom: 0;
	right: 0;
	transform: translate(30%, 30%);
}

.avatar-children {
	position: absolute;
	height: 100%;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
}

/* ================================== */
/* =========== Separator ============ */
/* ================================== */

.separator-container {
	display: flex;
	align-items: center;
	gap: 16px;
}

.separator-container .separator {
	flex: 1;
}

.separator {
	border-bottom: 1px solid var(--fg-3);
}

/* ================================== */
/* ============= Input ============== */
/* ================================== */

.input-container {
	display: flex;
	flex-direction: column;
	gap: 4px;
	--input-color: var(--fg-1);
}

.input-container input {
	background-color: transparent;
	padding: 8px;
	color: var(--input-color);
	border: 1px solid var(--bg-3);
	transition: 0.2s;
	border-radius: 4px;
}

.input-container input:focus {
	border: 1px solid var(--fg-3);
}

.input-container input::placeholder {
	color: var(--fg-4);
}

.input-container input.invalid {
	border: 1px solid var(--danger-color);
}

.input-container label {
	font-size: medium;
	font-weight: 500;
	color: var(--fg-1);
}

.input-container label span {
	font-size: small;
	color: var(--danger-color);
	vertical-align: super;
	margin-left: 2px;
}

.input-error {
	text-align: left;
	color: var(--danger-color);
	font-size: small;
	height: 13px;
}

.input-help {
	text-align: left;
	color: var(--fg-4);
	font-size: small;
	
}


/* ================================== */
/* ============ Checkbox ============ */
/* ================================== */

.checkbox input[type="checkbox"] {
	position: relative;
	cursor: pointer;
	width: 16px;
	padding: 0;
	aspect-ratio: 1/1;
}

.input-container input[type="checkbox"]:focus {
	border: 1px solid var(--bg-3);
}

.input-container input[type="checkbox"].invalid {
	border: 1px solid var(--danger-color);
}

.checkbox label {
	font-size: small;
	cursor: pointer;
	color: var(--fg-1);
}

.checkbox input[type="checkbox"]:checked {
	border: 1px solid var(--fg-3);
}

.checkbox input[type="checkbox"]:checked::after {
	content: '';
	display: block;
	position: absolute;
	top: 1px;
	left: 6px;
	width: 4px;
	height: 9px;
	border: solid var(--fg-1);
	border-width: 0 1px 1px 0;
	transform: rotate(45deg);
}

/* ================================== */
/* ============= Toast ============== */
/* ================================== */

.toaster {
	position: fixed;
	top: 16px;
	right: 16px;
	width: 350px;
	display: flex;
	flex-direction: column;
	gap: 8px;
	z-index: 99999999;
}

.toast {
	background-color: color-mix(in srgb, var(--bg-3), transparent 30%);
	opacity: 0;
	animation:
		slideIn 0.5s ease-in-out forwards,
		fadeOut 500ms ease-in-out forwards var(--timeout);
	max-height: 80vh;
}

.toast.sticky {
	animation: slideIn 0.5s ease-in-out forwards;
}

@keyframes fadeOut {
	0% {
		opacity: 1;
	}
	50% {
		max-height: 80vh;
		opacity: 0;
		padding: 16px;
	}
	100% {
		opacity: 0;
		max-height: 0;
		padding: 0;
	}
}

@keyframes slideIn {
	from {
		opacity: 0;
		transform: translateX(100%);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* ================================== */
/* ============= Modal ============== */
/* ================================== */

.modal {
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
  	height: 100vh;
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 9999;
}

.modal.overlay {
	background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
	max-width: 60%;
	animation: fadeIn 0.2s ease-in-out;
}

.modal .card {
	background-color: var(--bg-1);
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.modal-content .close {
	position: absolute;
	top: 8px;
	right: 8px;
	cursor: pointer;
}

/* ================================== */
/* ========= ImageSelector ========== */
/* ================================== */

.image-selector {
	display: flex;
	flex-direction: column;
	gap: 4px;
}

.image-selector label, .camera-label {
	font-weight: 500;
	font-size: medium;
}

.image-selector-help {
	width: 100px;
}

.image-selector label.disabled, .camera-label.disabled {
	color: var(--fg-4);
	opacity: 0.7;
	cursor: not-allowed;
}

.image-selector label span {
	font-size: small;
	color: var(--danger-color);
	vertical-align: super;
	margin-left: 2px;
}

.image-selector-container {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(70px, 1fr));
	grid-gap: 8px;
	padding: 2px;
	box-sizing: border-box;
}

.image-selector-container img, .image-selector-container label {
	object-fit: cover;
	width: 100%;
	aspect-ratio: 1/1;
	border-radius: 8px;
	cursor: pointer;
	background-color: var(--bg-2);
}

.image-selector-container img:hover {
	outline: 2px solid var(--fg-3);
}

.image-selector-container img.selected {
	outline: 2px solid var(--primary-color);
}

.image-selector-container label input[type="file"] {
	display: none;
}

.image-selector-container label {
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: x-large;
	background-color: var(--bg-2);
}

.image-selector-container label:hover {
	background-color: var(--bg-3);
}

.image-selector-item {
	position: relative;
}

.image-selector-item i {
	display: none;
	position: absolute;
	top: 0;
	right: 0;
	color: var(--fg-1);
	padding: 4px;
}

.image-selector-item:hover i.fa-trash {
	display: block;
}

.image-selector-item i:hover {
	color: var(--danger-color);
}

.image-selector-item.loading img {
	outline: none;
}


.image-selector-item.loading i {
	display: none;
}

.image-selector-item.loading .spinner i {
	display: block;
}

.image-selector-item.loading .spinner i:hover {
	color: var(--fg-1);
}

.image-selector-item.loading .spinner{
	position: absolute;
	top: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: calc(100% - 2px);
	background-color: rgba(0, 0, 0, 0.5);
	border-radius: 8px;
}

/* ================================== */
/* ============= Spinner ============ */
/* ================================== */

.avatar-deletion-modal img {
	width: 300px;
	aspect-ratio: 1/1;
	object-fit: cover;
	background-color: var(--bg-2);
	border-radius: 8px;
}

/* ================================== */
/* ============= Spinner ============ */
/* ================================== */

.spinner i {
	animation: spin 1s linear infinite;
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}


/* ================================== */
/* ============ PopHover ============ */
/* ================================== */

.pop-hover-container {
	position: relative;
	justify-content: center;
	align-items: center;
}

.pop-hover {
	position: absolute;
	top: calc(100% + 8px);
	left: 50%;
	transform: translateX(-50%);
	background-color: var(--bg-2);
	color: var(--fg-1);
	border-radius: 4px;
	padding: 8px;
	text-overflow: ellipsis;
	display: none;
	z-index: 1000;
	opacity: 0;
	transform: opacity 0.3s;
	font-size: small;
}

.pop-hover::after {
	content: '';
	position: absolute;
	top: -16px;
	left: 50%;
	transform: translateX(-50%);
	border: 8px solid transparent;
	border-bottom-color: var(--bg-2);
}

.pop-hover-container:hover .pop-hover {
	display: block;
	opacity: 1;
}

.webcam-modal .error{
	color: var(--danger-color)
}


/* ================================== */
/* ============ Editable ============ */
/* ================================== */

.editable {
	display: flex;
	align-items: center;
	justify-content: space-between;
	min-height: 32px;
	gap: 8px;
}

.editable input {
	width: 100%;
}

.editable input:disabled {
	cursor: default;
}


/* ================================== */
/* ============== Key =============== */
/* ================================== */

.key {
	--key-color: rgb(107, 107, 107);
	--key-shadow: rgb(56, 56, 56);
	--key-ligth: rgb(136, 136, 136);
	width: fit-content;
	background-color: var(--key-color);
	border-bottom: 4px solid var(--key-shadow);
	border-right: 4px solid var(--key-shadow);
	border-top: 3px solid var(--key-ligth);
	border-left: 3px solid var(--key-ligth);
	border-radius: 4px;
	display: flex;
	justify-content: center;
	align-items: center;
}

.key p {
	/* aspect-ratio: 1/1; */
	min-width: 16px;
	height: 16px;
	text-align: center;
	padding: 6px;
	color: var(--fg-1);
	border-radius: 2px;
	display: flex;
	justify-content: center;
	align-items: center;
}

.key.pressed {
	border-top: 4px solid var(--key-shadow);
	border-left: 4px solid var(--key-shadow);
	border-right: 3px solid var(--key-ligth);
	border-bottom: 3px solid var(--key-ligth);
}


/* ================================== */
/* ============= Alert ============== */
/* ================================== */


.alert {
	display: flex;
	align-items: center;
	color: var(--fg-1);
	padding: 16px;
	gap: 16px;
	border-radius: 8px;
}

.alert.info {
	background-color: var(--info-color);
}

.alert.danger {
	background-color: var(--danger-color);
}

.alert.warning {
	background-color: var(--warning-color);
}

.alert.success {
	background-color: var(--success-color);
}


/* ================================== */
/* =========== Pin Input ============ */
/* ================================== */

.pin-input {
	display: flex;
	gap: 8px;
}

.pin-input input {
	border: 1px solid var(--bg-3);
	border-radius: 4px;
	background-color: transparent;
	color: var(--fg-1);
	padding: 8px;
	width: 24px;
	aspect-ratio: 1/1;
	text-align: center;
	caret-color: transparent;
	font-size: large;
}

.pin-input input:focus {
	border: 1px solid var(--fg-3);
}


/* ================================== */
/* =========== Accordion ============ */
/* ================================== */

.accordion {
	border-radius: 4px;
	overflow: hidden;
}

.accordion-header {
	padding: 8px;
	box-sizing: border-box;
	background-color: var(--bg-3);
	transition: 0.4s;
}

.accordion-header:hover {
	background-color: var(--bg-2);
}

.accordion-header.open {
	background-color: var(--bg-2);
}

.accordion-header .accordion-icon {
	transition: transform 0.3s ease-in-out;
}

.accordion-header.open .accordion-icon {
	transform: rotate(-90deg);
}

.accordion-content {
	/* border-top: 2px solid var(--bg-2); */
	/* background-color: var(--bg-3); */
	max-height: 0;
	overflow: hidden;
	transition: max-height 0.3s ease-in-out;
}

.accordion-content.open {
	max-height: 400px;
	overflow: hidden;
}

/* ================================== */
/* ======== Segmented control ======= */
/* ================================== */

.segmented-control {
	display: flex;
	position: relative;
	color: var(--fg-3);
	padding: 8px 0;
	font-size: medium;
	background-color: var(--bg-3);
	border-radius: 4px;
	cursor: pointer;
}

.segmented-control::before {
	content: "";
	position: absolute;
	top: 0;
	left: var(--segment-translate);
	width: var(--width);
	height: 100%;
	background-color: var(--bg-1);
	box-shadow: 0px 0px 16px 2px rgba(0, 0, 0, 0.452);
	border-radius: 4px;
	z-index: 0;
	transition: left 0.3s ease-in-out;
}

.segmented-control-button {
	flex: 1;
	z-index: 1;
	padding: 0 8px;
	position: relative;
	transition: 0.3s;
}

.segmented-control-button.disabled {
	color: var(--fg-4);
	cursor: not-allowed;
}

.segmented-control-button:not(:last-child)::after {
	position: absolute;
	top: 0%;
	height: 100%;
	width: 2px;
	content: "";
	right: -1px;
	background-color: var(--fg-3);
}

.segmented-control-button.selected {
	color: var(--fg-1);
}