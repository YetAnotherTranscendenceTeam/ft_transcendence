server {
    listen 8080 ssl;

    ssl_certificate /run/secrets/ssl-crt;
    ssl_certificate_key /run/secrets/ssl-key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://frontend:8080;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # ==== For ws ====
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        # ================
    }
}

server {
    listen 7979 ssl;

    ssl_certificate /run/secrets/ssl-crt;
    ssl_certificate_key /run/secrets/ssl-key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        return 404;
    }

    location /register/ {
        rewrite ^/register/(.*)$ /$1 break;
        proxy_pass http://registration:3000;
    }

    location /auth/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        rewrite ^/auth/(.*)$ /$1 break;

        proxy_pass http://password-auth:3000;
    }

    location /auth/fortytwo/ {
        rewrite ^/auth/fortytwo/(.*)$ /$1 break;
        proxy_pass http://fortytwo-auth:3000;
    }

    location = /token/refresh {
        rewrite ^/token/refresh$ /refresh break;
        proxy_pass http://token-manager:3000;
    }

    location /users/ {
        rewrite ^/users/(.*)$ /$1 break;
        proxy_pass http://users:3000;
    }

    location = /me {
        rewrite ^/me$ /me break;
        proxy_pass http://users:3000;
    }
}

# server {
#     listen 7878 ssl;

#     ssl_certificate /run/secrets/ssl-crt;
#     ssl_certificate_key /run/secrets/ssl-key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     location / {
#         root /avatars;
#     }
# }
