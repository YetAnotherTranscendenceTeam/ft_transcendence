location / {
    return 404;
}

location /register {
    rewrite ^/register(/|$)(.*) /$2 break;
    proxy_pass http://registration:3000;
}

location /auth {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    rewrite ^/auth(/|$)(.*) /$2 break;
    proxy_pass http://password-auth:3000;
}

location /auth/fortytwo {
    rewrite ^/auth/fortytwo(/|$)(.*) /$2 break;
    proxy_pass http://fortytwo-auth:3000;
}

location /auth/google {
    rewrite ^/auth/google(/|$)(.*) /$2 break;
    proxy_pass http://google-auth:3000;
}

location /2fa {
    rewrite ^/2fa(/|$)(.*) /$2 break;
    proxy_pass http://2fa:3000;
}

location /token {
    rewrite ^/token(/|$)(.*) /$2 break;
    proxy_pass http://token-manager:3000;
}

location /users {
    rewrite ^/users(/|$)(.*) /$2 break;
    proxy_pass http://users:3000;
}

location /lobbies/ {
    rewrite ^/lobbies(/|$)(.*) /$2 break;
    proxy_pass http://lobbies:3000;


    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # ==== For ws ====
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    # ================
}

location /matchmaking {
    proxy_set_header Connection '';
    proxy_http_version 1.1;
    chunked_transfer_encoding off;

    proxy_buffering off;
    proxy_cache off;
    proxy_read_timeout 2h;
    rewrite ^/matchmaking(/|$)(.*) /$2 break;
    proxy_pass http://matchmaking:3000;
}

location /me {
    proxy_pass http://users:3000;
}

location /avatars {
    client_max_body_size 5M;

    rewrite ^/avatars(/|$)(.*) /$2 break;
    proxy_pass http://avatars:3000;
}

location /settings {
    rewrite ^/settings(/|$)(.*) /$2 break;
    proxy_pass http://settings:3000;
}

location /social {
    rewrite ^/social(/|$)(.*) /$2 break;
    proxy_pass http://social:3000;

    # WebSocket-specific headers for /notify
    location ~ ^/social/notify {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

location = /social/notify {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://social:3000/notify;
}

location = /ping {
    return 204;
}
