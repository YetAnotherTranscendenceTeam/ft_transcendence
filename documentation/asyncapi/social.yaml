asyncapi: 3.0.0
info:
  title: Social notifications
  version: 1.0.0
  description: Websocket in charge of communicating live social and activity related informations

servers:
  development:
    host: localhost:8080
    protocol: wss
    description: The development server

channels:
  social:
    bindings:
      ws:
        query:
          type: object
          required:
            - access_token
          properties:
            token:
              type: string
              description: An JWT issued by the server authentication service
    address: /social/notify
    messages:
      # sent from server to client
      welcome:
        $ref: "#/components/messages/welcome"
      recv_status:
        $ref: "#/components/messages/recv_status"
      recv_new_friend_request:
        $ref: "#/components/messages/recv_new_friend_request"
      recv_delete_friend_request:
        $ref: "#/components/messages/recv_delete_friend_request"
      recv_new_friend:
        $ref: "#/components/messages/recv_new_friend"
      recv_delete_friend:
        $ref: "#/components/messages/recv_delete_friend"
      recv_new_block:
        $ref: "#/components/messages/recv_new_block"
      recv_delete_block:
        $ref: "#/components/messages/recv_delete_block"
      recv_lobby_invite:
        $ref: "#/components/messages/recv_lobby_invite"
      recv_lobby_request:
        $ref: "#/components/messages/recv_lobby_request"
      error:
        $ref: "#/components/messages/error"

      # sent from client to server
      ping:
        $ref: "#/components/messages/ping"
      send_status:
        $ref: "#/components/messages/send_status"
      send_lobby_invite:
        $ref: "#/components/messages/send_lobby_invite"
      send_lobby_request:
        $ref: "#/components/messages/send_lobby_request"
      goodbye:
        $ref: "#/components/messages/goodbye"

operations:
  publish:
    action: send
    channel:
      $ref: "#/channels/social"
    messages:
      - $ref: "#/channels/social/messages/welcome"
      - $ref: "#/channels/social/messages/recv_status"
      - $ref: "#/channels/social/messages/recv_new_friend_request"
      - $ref: "#/channels/social/messages/recv_delete_friend_request"
      - $ref: "#/channels/social/messages/recv_new_friend"
      - $ref: "#/channels/social/messages/recv_delete_friend"
      - $ref: "#/channels/social/messages/recv_new_block"
      - $ref: "#/channels/social/messages/recv_delete_block"
      - $ref: "#/channels/social/messages/recv_lobby_invite"
      - $ref: "#/channels/social/messages/recv_lobby_request"
      - $ref: "#/channels/social/messages/error"

  subscribe:
    action: receive
    channel:
      $ref: "#/channels/social"
    messages:
      - $ref: "#/channels/social/messages/ping"
      - $ref: "#/channels/social/messages/send_status"
      - $ref: "#/channels/social/messages/send_lobby_invite"
      - $ref: "#/channels/social/messages/send_lobby_request"
      - $ref: "#/channels/social/messages/goodbye"

components:
  messages:
    welcome:
      description: Message sent by the server uppon connection
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - welcome
          data:
            type: object
            properties:
              friends:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      $ref: "#/components/schemas/account_id"
                    profile:
                      $ref: "#/components/schemas/profile"
                    status:
                      $ref: "#/components/schemas/status"
                  required:
                    - account_id
                    - profile
                    - status
                  additionalProperties: false
              pending:
                type: object
                properties:
                  sent:
                    type: array
                    items:
                      type: object
                      properties:
                        account_id:
                          $ref: "#/components/schemas/account_id"
                        profile:
                          $ref: "#/components/schemas/profile"
                      required:
                        - account_id
                        - profile
                        - status
                      additionalProperties: false
                  received:
                    type: array
                    items:
                      type: object
                      properties:
                        account_id:
                          $ref: "#/components/schemas/account_id"
                        profile:
                          $ref: "#/components/schemas/profile"
                      required:
                        - account_id
                        - profile
                        - status
                      additionalProperties: false
                required:
                  - sent
                  - received
                additionalProperties: false
              blocked:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      $ref: "#/components/schemas/account_id"
                    profile:
                      $ref: "#/components/schemas/profile"
                  required:
                    - account_id
                    - profile
                  additionalProperties: false
              self:
                $ref: "#/components/schemas/status"
        required:
          - event
          - data
        additionalProperties: false

    recv_status:
      description: Message sent by the server when the status of a friend changes
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - recv_status
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              status:
                $ref: "#/components/schemas/status"
            required:
              - account_id
              - status
        required:
          - event
          - data

    recv_new_friend_request:
      description: Message sent by the server when a pending friend request get sent
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - recv_new_friend_request
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              profile:
                $ref: "#/components/schemas/profile"
              sender:
                description: The account ID of the user that initiated the friend request
                type: number
                example: 108244
            required:
              - account_id
              - profile
              - sender
        required:
          - event
          - data

    recv_delete_friend_request:
      description: Message sent by the server when a pending friend request get canceled
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - recv_delete_friend_request
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              sender:
                description: The account ID of the user that initiated the friend request
                type: number
                example: 108244
            required:
              - account_id
              - sender
        required:
          - event
          - data

    recv_new_friend:
      description: Message sent by the server when a mutual friendship is created
      payload:
        type: object
        properties:
          event:
            description: The type of the event
            type: string
            enum:
              - recv_new_friend
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              profile:
                $ref: "#/components/schemas/profile"
              status:
                $ref: "#/components/schemas/status"
            required:
              - account_id
              - profile
              - status
            additionalProperties: false
        required:
          - type
          - data
        additionalProperties: false

    recv_delete_friend:
      description: Message sent by the server when a mutual friendship is destroyed
      payload:
        type: object
        properties:
          event:
            description: The type of the event
            type: string
            enum:
              - recv_delete_friend
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
            required:
              - account_id
            additionalProperties: false
        required:
          - type
          - data
        additionalProperties: false

    recv_new_block:
      description: Message sent by the server when the user blocks another user
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - recv_new_block
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              profile:
                $ref: "#/components/schemas/profile"
            required:
              - account_id
              - profile
            additionalProperties: false
        required:
          - event
          - data
        additionalProperties: false

    recv_delete_block:
      description: Message sent by the server
      payload:
        type: object
        properties:
          event:
            description: The type of the event
            type: string
            enum:
              - recv_delete_block
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
            required:
              - account_id
            additionalProperties: false
        required:
          - type
          - data
        additionalProperties: false

    recv_lobby_invite:
      description: Message sent by the server when another user invite the client to join a lobby
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - recv_lobby_invite
          data:
            type: object
            properties:
              username:
                $ref: "#/components/schemas/username"
              gamemode:
                $ref: "./lobbies.yaml#/components/schemas/gamemode"
              join_secret:
                $ref: "#/components/schemas/join_secret"
        required:
          - type
          - data

    recv_lobby_request:
      description: Message sent by the server when another user invite the client to join a lobby
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - recv_lobby_request
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              username:
                $ref: "#/components/schemas/username"
            required:
              - account_id
              - username
        required:
          - type
          - data

    error:
      description: Message sent by the server when an error occurs
      payload:
        type: object
        properties:
          code:
            type: string
            description: An error code
            example: INVALID_EVENT
          message:
            type: string
            description: An error message description
            example: The event payload does not meet the required format or contains incorrect values
          details:
            type: object
            description: An optional object that may hold additional information about the error
        required:
          - code
          - message

    ping:
      description: Send this message to the server to prevent the user from going inactive
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - ping
        required:
          - event

    send_status:
      description: |
        Send this message to the server to update your own status.
        For any other status type that `online``, an optional data object
        is accepted to hold custom informations
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - send_status
          data:
            description: An activity status
            type: object
            properties:
              type:
                type: string
                enum:
                  - online
                  - ingame
                  - inlobby
              data:
                type: object
                description: Custom information about the user activity
            required:
              - type
        required:
          - event
          - data

    send_lobby_invite:
      description: Send this message to the server to invite a player to join a lobby
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - send_lobby_invite
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
              gamemode:
                $ref: "./lobbies.yaml#/components/schemas/gamemode"
              join_secret:
                $ref: "#/components/schemas/join_secret"
            required:
              - account_id
              - gamemode
        required:
          - event
          - data

    send_lobby_request:
      description: Send this message to the server to request a lobby invitation to another player
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - send_lobby_request
          data:
            type: object
            properties:
              account_id:
                $ref: "#/components/schemas/account_id"
            required:
              - account_id
        required:
          - event
          - data

    goodbye:
      description: Send this message to the server disconnect the websocket
      payload:
        type: object
        properties:
          event:
            type: string
            description: The type of the event
            enum:
              - goodbye
        required:
          - event

  schemas:
    status:
      description: An activity status
      type: object
      properties:
        type:
          type: string
          enum:
            - online
            - offline
            - inactive
            - ingame
            - inlobby
        data:
          type: object
          description: Custom information about the user activity
      required:
        - type
      additionalProperties: false

    profile:
      description: A user profile
      type: object
      properties:
        account_id:
          $ref: "#/components/schemas/account_id"
        username:
          $ref: "#/components/schemas/username"
        avatar:
          $ref: "#/components/schemas/avatar"

    account_id:
      description: An account unique ID
      type: number
      example: 108244

    username:
      description: An unique username
      type: string
      example: "GonkGonk"

    avatar:
      description: A profile picture URI
      type: string
      format: uri
      example: https://example.com/image.jpg

    join_secret:
      description: A lobby secret ID
      type: string
      example: zBR43YSt
