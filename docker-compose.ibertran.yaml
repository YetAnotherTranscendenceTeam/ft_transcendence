services:
  nginx:
    build:
      context: services/nginx/
      args:
        CONF_FILE: ibertran.conf
    image: ibertran/transcendence.nginx:latest
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:7979:7979"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    networks:
      - frontend
      - avatars
      - settings
      - documentation
      - social
    depends_on:
      - avatars

  frontend:
    build:
      context: services/frontend/
      args:
        - BACKEND_URL=https://api-transcendence.ibertran.dev
        - WS_URL=wss://api-transcendence.ibertran.dev
        - GOOGLE_CLIENT_ID=9744497548-ecens5hjhfugrc0l4a3nl9bqc3qr08dh.apps.googleusercontent.com
    image: ibertran/transcendence.frontend:latest
    networks:
      - frontend

  credentials:
    build: services/credentials/
    image: ibertran/transcendence.credentials:latest
    volumes:
      - sqlite:/database
    networks:
      - credentials
      - db-profiles

  token-manager:
    build: services/token-manager/
    image: ibertran/transcendence.token-manager:latest
    volumes:
      - sqlite:/database
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
    networks:
      - frontend
      - tokens

  registration:
    build: services/registration/
    image: ibertran/transcendence.registration:latest
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
      - PASSWORD_PEPPER=${PASSWORD_PEPPER}
    networks:
      - credentials
      - frontend
    
  password-auth:
    build: services/password-auth/
    image: ibertran/transcendence.password-auth:latest
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
      - PASSWORD_PEPPER=${PASSWORD_PEPPER}
    networks:
      - credentials
      - frontend
      - tokens
  
  fortytwo-auth:
    build: services/fortytwo-auth/
    image: ibertran/transcendence.fortytwo-auth:latest
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - PASSWORD_PEPPER=${PASSWORD_PEPPER}
      - API42_CLIENT_ID=${API42_CLIENT_ID}
      - API42_SECRET=${API42_SECRET}
      - API42_REDIRECT_URI=${API42_REDIRECT_URI}
    networks:
      - credentials
      - frontend
      - tokens
      - db-profiles
      - avatars

  google-auth:
    build: services/google-auth/
    image: ibertran/transcendence.google-auth:latest
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    networks:
      - credentials
      - frontend
      - tokens
      - db-profiles
      - avatars

  lobbies:
    build: services/lobbies/
    image: ibertran/transcendence.lobbies:latest
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
      - MATCHMAKING_JWT_SECRET=${MATCHMAKING_JWT_SECRET}
    networks:
      - frontend
      - db-profiles
    depends_on:
      - matchmaking

  matchmaking:
    build: services/matchmaking/
    image: ibertran/transcendence.matchmaking:latest
    volumes:
      - sqlite:/database
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - MATCHMAKING_JWT_SECRET=${MATCHMAKING_JWT_SECRET}
      - MATCHMAKING_SCHEDULER_DELAY=${MATCHMAKING_SCHEDULER_DELAY}
    networks:
      - frontend

  db-profiles:
    build: services/db-profiles/
    image: ibertran/transcendence.profiles:latest
    volumes:
      - sqlite:/database
    environment:
      - CDN_JWT_SECRET=${CDN_JWT_SECRET}
      - CDN_URL=${CDN_URL}
    networks:
      - db-profiles

  users:
    build: services/users/
    image: ibertran/transcendence.users:latest
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
    networks:
     - frontend
     - db-profiles

  settings:
    build: services/settings/
    image: ibertran/transcendence.settings:latest
    environment:
      - CORS_ORIGIN=${CORS_ORIGIN}
      - JWT_SECRET=${JWT_SECRET}
      - TOKEN_MANAGER_SECRET=${TOKEN_MANAGER_SECRET}
    networks:
      - settings
      - avatars
      - db-profiles
      - credentials
      - tokens

  avatars:
    build: services/avatars/
    image: ibertran/transcendence.avatars:latest
    volumes:
      - sqlite:/database
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CDN_JWT_SECRET=${CDN_JWT_SECRET}
      - CDN_URL=${CDN_URL}
    networks:
      - avatars
    depends_on:
      cdn-nginx:
        condition: service_healthy

  social:
    build: services/social/
    image: ibertran/transcendence.social:latest
    volumes:
      - sqlite:/database
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SOCIAL_OFFLINE_DELAY=${SOCIAL_OFFLINE_DELAY}
      - SOCIAL_INACTIVITY_DELAY=${SOCIAL_INACTIVITY_DELAY}
    networks:
      - social
      - db-profiles
      - settings

  cdn-nginx:
    build:
      context: services/CDN/nginx/
      args:
        - CONF_FILE=ibertran.conf
    image: ibertran/transcendence.cdn-nginx:latest
    ports:
      - "127.0.0.1:8181:8181"
    volumes:
      - avatars:/app/avatars/users/:ro
      - ./services/CDN/.avatars:/app/avatars/default/:ro
    networks:
      - cdn-api
    depends_on:
      cdn-api:
        condition: service_healthy

  cdn-api:
    build: services/CDN/api/
    image: ibertran/transcendence.cdn-api:latest
    volumes:
      - avatars:/app/avatars/users/
      - ./services/CDN/.avatars:/app/avatars/default/:ro
    environment:
      - CORS_ORIGIN=${FRONTEND_URL}
      - CDN_JWT_SECRET=${CDN_JWT_SECRET}
    networks:
     - cdn-api

networks:
  frontend:
    driver: bridge
  credentials:
    driver: bridge
  db-profiles:
    driver: bridge
  tokens:
    driver: bridge
  settings:
    driver: bridge
  documentation:
    driver: bridge
  avatars:
    driver: bridge
  social:
    driver: bridge
  cdn-api:
    driver: bridge
  swagger:
    driver: bridge
    
volumes:
  avatars:
  sqlite:
